<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brands - Cario</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="/css/admin/brand.css">
</head>

<body>
    <%- include("../partials/admin/sidebar") %>

    <!-- add brand modal -->
    <div class="modal fade" id="brandModal" tabindex="-1" aria-labelledby="brandModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="brandForm">
                <div class="modal-content">
                    <div class="modal-header bg-dark">
                        <h5 class="modal-title" id="brandModalLabel">Add Brand</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="return closed()"></button>
                    </div>
                    <div class="modal-body bg-dark">
                        <div class="mb-3">
                            <label for="brandName" class="form-label">Brand Name</label>
                            <input type="text" class="form-control bg-dark text-white" id="brandName" name="BrandName">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control bg-dark text-white" id="description" name="description" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer bg-dark">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="return closed()">Close</button>
                        <button type="submit" class="btn btn-primary">Save brand</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- edit brand modal -->
    <div class="modal fade" id="editbrandModal" tabindex="-1" aria-labelledby="brandModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="editbrandForm" onsubmit="return false">
                <div class="modal-content">
                    <div class="modal-header bg-dark">
                        <h5 class="modal-title" id="brandModalLabel">Edit brand</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" ></button>
                    </div>
                    <div class="modal-body bg-dark">
                        <div class="mb-3">
                            <label for="brandName" class="form-label">Brand Name</label>
                            <input type="text" class="form-control bg-dark text-white" id="brandName" name="BrandName">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control bg-dark text-white" id="description" name="description" rows="3"></textarea>
                        </div>
                        <input type="hidden" id="brandId" name="brandId">
                    </div>
                    <div class="modal-footer bg-dark">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" onclick="submitEdit()" class="btn btn-primary">Save brand</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="container">
        <div class="header">
            <h2>Brands</h2>
            <button class="btn add-btn bg-primary" data-bs-toggle="modal" data-bs-target="#brandModal">ADD Brand +</button>
        </div>

        <div class="search-container">
            <form action="/admin/brand" method="get" id="searchForm">
                <div class="input-group">
                    <input type="text" class="search-input bg-dark text-white" name="search" placeholder="Search by brand name"
                        value="<%= typeof search !== 'undefined' ? search : '' %>">
                    <button type="submit" class="btn btn-outline-primary">Search</button>
                </div>
            </form>
            <% if (typeof search !== 'undefined' && search.trim()) { %>
                <form action="/admin/brand" method="get" style="display: inline;">
                    <button type="submit" class="clear-btn" id="clearSearch">Clear</button>
                </form>
            <% } %>
        </div>

        <div class="table-responsive">
            <table class="table table-dark">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Brand</th>
                        <th>Brand DESCRIPTION</th>
                        <th>LAST UPDATED</th>
                        <th>LISTING</th>
                        <th>ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (brand && brand.length > 0) { %>
                        <% brand.forEach((item, index) => { %>
                            <tr>
                                <td>#<%= index + 1 %></td>
                                <td><%= item.BrandName %></td>
                                <td><%= item.description %></td>
                                <td><%= item.createdAt.toLocaleDateString() %></td>
                                <td>
                                    <% if (item.isListed) { %>
                                        <button onclick="unlistbrand('<%= item._id %>')" class="list-btn unlist">Unlist</button>
                                    <% } else { %>
                                        <button onclick="listbrand('<%= item._id %>')" class="list-btn list">List</button>
                                    <% } %>
                                </td>
                                <td>
                                    <button class="action-btn edit-btn" onclick="editbrand('<%= JSON.stringify(item) %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete-btn" onclick="deletebrand('<%= item._id %>')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td colspan="6">No brands found</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <div class="pagination">
            <span class="page-info">Page <%= currentPage %> of <%= totalPages %></span>
            <% if (currentPage > 1) { %>
                <a href="/admin/brand?page=<%= currentPage - 1 %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>" style="text-decoration: none;">
                    <button class="nav-btn">Previous</button>
                </a>
            <% } %>
            <% for (let j = 1; j <= totalPages; j++) { %>
                <a href="/admin/brand?page=<%= j %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>" style="text-decoration: none;">
                    <button class="page-btn <%= (j === currentPage) ? 'active' : '' %>"><%= j %></button>
                </a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="/admin/brand?page=<%= currentPage + 1 %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>" style="text-decoration: none;">
                    <button class="nav-btn">Next</button>
                </a>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function closed(){
            window.location.reload()
        }
        
        function editbrand(item) {
            const brand = JSON.parse(item);
            const form = document.getElementById('editbrandForm');
            form.elements['BrandName'].value = brand.BrandName || '';
            form.elements['description'].value = brand.description || '';
            form.elements['brandId'].value = brand._id || '';
            const modal = new bootstrap.Modal(document.getElementById('editbrandModal'));
            modal.show();
        }
        
        function submitEdit() {
            const form = document.getElementById('editbrandForm');
            const formData = new FormData(form);
            const BrandName = formData.get('BrandName').trim();
            const description = formData.get('description').trim();
            
            const brandId = formData.get('brandId').trim();
        
            const nameRegex = /^[A-Za-z\s]{6,}$/;
        
            if (!nameRegex.test(BrandName)) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Brand Name!',
                    text: 'Name must be at least 6 characters and contain only alphabets.',
                });
            }
            if (!description) {
                    return Swal.fire({
                        icon: 'warning',
                        title: 'Description Required!',
                        text: 'Description cannot be empty.',
                    });
                }
            if (description.length > 80) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'Description Too Long!',
                    text: `Description must not exceed 80 characters. Currently: ${description.length} characters.`,
                });
            }
        
        
            // Prepare form data for submission
            const updatedFormData = new FormData();
            updatedFormData.append('BrandName', BrandName);
            updatedFormData.append('description', description);
            updatedFormData.append('brandId', brandId);
        
            fetch('/admin/edit-brand', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams([...updatedFormData])
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: data.message || 'Brand edited successfully',
                            timer: 1500
                        }).then(() => {
                            form.reset();
                            const modal = bootstrap.Modal.getInstance(document.getElementById('editbrandModal'));
                            modal.hide();
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: data.message || 'Brand already exists!',
                            timer: 1500
                        });
                    }
                })
                .catch(error => console.error('Error:', error));
        }
        
        function deletebrand(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to delete this brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/delete-brand/${id}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: data.message || 'Brand deleted',
                                    timer: 1500
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: data.message || 'Error while deleting brand',
                                    timer: 1500
                                });
                            }
                        })
                        .catch(err => {
                            Swal.fire('Error', 'Something went wrong', 'error');
                        });
                }
            });
        }
        
        function unlistbrand(brandId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to unlist this brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, unlist it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/unlist-brand/${brandId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: data.message || 'Brand unlisted',
                                    timer: 1500
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: data.message || 'Error while unlisting brand',
                                    timer: 1500
                                });
                            }
                        })
                        .catch(err => {
                            Swal.fire('Error', 'Something went wrong', 'error');
                        });
                }
            });
        }
        
        function listbrand(brandId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to list this brand!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, list it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/list-brand/${brandId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: data.message || 'Brand listed',
                                    timer: 1500
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: data.message || 'Error while listing brand',
                                    timer: 1500
                                });
                            }
                        })
                        .catch(err => {
                            Swal.fire('Error', 'Something went wrong', 'error');
                        });
                }
            });
        }
        
        document.getElementById('brandForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const BrandName = document.getElementById('brandName').value.trim();
            const description = document.getElementById('description').value.trim();
        
            const nameRegex = /^[A-Za-z\s]{6,}$/;
        
            if (!nameRegex.test(BrandName)) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Brand Name!',
                    text: 'Name must be at least 6 characters and contain only alphabets.',
                });
            }
            if (!description) {
                    return Swal.fire({
                        icon: 'warning',
                        title: 'Description Required!',
                        text: 'Description cannot be empty.',
                    });
                }
            if (description.length > 80) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'Description Too Long!',
                    text: `Description must not exceed 80 characters. Currently: ${description.length} characters.`,
                });
            }
        
           
        
            fetch('/admin/add-brand', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ BrandName, description })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: data.message || 'Brand added successfully',
                            timer: 1500
                        }).then(() => {
                            const form = document.getElementById('brandForm');
                            form.reset();
                            const modal = bootstrap.Modal.getInstance(document.getElementById('brandModal'));
                            modal.hide();
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: data.message || 'Brand already exists!',
                            timer: 1500
                        });
                    }
                })
                .catch(error => console.error('Error:', error));
        });
        </script>
</body>

</html>