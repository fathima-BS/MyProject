<%- include("../partials/user/header") %>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    * {
        margin: 0;
        box-sizing: border-box;
    }

    /* Modern Product Detail Page Styling */
    .product-main-container {
        font-family: 'Arial', sans-serif;
        padding-left: 85px;
        padding-right: 85px;
    }

    /* Breadcrumb Styling */
    .product-main-container .breadcrumb {
        padding: 12px 20px;
        font-size: 14px;
        color: #ffffff;
        background: #f5f5f5;
        margin: 10px 0;
    }

    .breadcrumb a {
        color: #1e90ff;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb a:hover {
        color: #1871cc;
    }

    .breadcrumb span {
        margin: 0 8px;
        color: #999;
    }

    .breadcrumb .current {
        color: #333;
        font-weight: 500;
    }

    .product-detail-section {
        display: flex;
        gap: 30px;
        background: #fff;
        padding: 10px 150px 34px 56px;
        border-radius: 10px;
    }

    .image-gallery {
        flex: 1;
        max-width: 500px;
        position: relative;
    }

    /* Image zoom container */
    .zoom-container {
        width: 100%;
        height: 500px;
        position: relative;
        overflow: hidden;
        border-radius: 8px;
        margin-bottom: 10px;
    }

    /* Main product image */
    .main-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.1s ease;
        cursor: zoom-in;
    }

    .thumbnail-container {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding-bottom: 5px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 5px;
        cursor: pointer;
        border: 2px solid transparent;
        transition: border-color 0.3s;
    }

    .thumbnail:hover,
    .thumbnail.active {
        border-color: #007bff;
    }

    .product-info {
        flex: 1;
        padding: 20px;
        margin: 10px;
    }

    .product-title {
        font-size: 28px;
        font-weight: 700;
        color: #333;
        margin-bottom: 13px;
    }

    .brand-name {
        font-size: 18px;
        color: #666;
        margin-bottom: 15px;
    }

    .price-section {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
    }

    .sale-price {
        font-size: 24px;
        font-weight: 700;
        color: #28a745;
    }

    .strike-price {
        font-size: 18px;
        color: #878686;
        text-decoration: line-through;
    }

    .offer-info {
        font-size: 18px;
        color: #ff4444;
        font-weight: 600;
    }

    .product-description {
        font-size: 17px;
        color: #555;
        line-height: 1.6;
        margin-bottom: 20px;
    }

    .status-quantity {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .status {
        font-size: 14px;
        color: #28a745;
        font-weight: 600;
    }

    .quantity {
        font-size: 14px;
        color: #333;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        width: 400px;
        margin-bottom: 20px;
    }

    .related-products {
        margin-top: 40px;
        padding: 20px;
        background: #fff;
        border-radius: 10px;
    }

    .related-title {
        font-size: 24px;
        font-weight: 700;
        color: #333;
        margin-bottom: 20px;
        text-align: center;
        position: relative;
    }

    .related-title::after {
        content: '';
        position: absolute;
        bottom: -5px;
        left: 50%;
        transform: translateX(-50%);
        width: 50px;
        height: 3px;
        background: #007bff;
        border-radius: 2px;
    }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
    }

    .product-card {
        background: #fff;
        border-radius: 8px;
        padding: 15px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
        position: relative;
        height: 400px; /* Set a fixed height for consistency */
        display: flex;
        flex-direction: column;
        justify-content: space-between; 
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .product-card img {
        max-width: 100%;
        height: 200px; 
        object-fit: cover; 
        border-radius: 5px;
        margin: 0 auto 10px; 
        display: block; 
    }

    .product-card h4 {
        font-size: 16px;
        color: #333;
        margin-bottom: 8px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .product-card h6 {
        font-size: 14px;
        color: #666;
        margin-bottom: 8px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap; 
    }

    .product-card p {
        font-size: 14px;
        color: #333;
        margin-bottom: 10px;
        flex-grow: 1; 
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(255, 255, 255, 0.8);
        color: #ff6b6b;
        padding: 6px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 18px;
        transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
        z-index: 10;
    }

    .wishlist-btn:hover {
        background: rgba(255, 255, 255, 1);
        color: #ff4c4c;
        transform: translateY(-2px);
    }

    .wishlist-btn i {
        color: inherit;
    }

    .wishlist-btn.liked i {
        color: #ff4c4c;
    }

    .add-to-cart-btn {
        background: #1e3a8a;
        color: #fff;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
        transition: background 0.3s, transform 0.2s;
        width: 100%;
    }

    .add-to-cart-btn:hover {
        background: #17286b;
        transform: translateY(-2px);
    }

    .add-to-wishList {
        background: #000000;
        color: #fff;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
        transition: background 0.3s, transform 0.2s;
        width: 100%;
    }

    .add-to-wishList:hover {
        background: #333333;
        transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (max-width: 992px) {
        .product-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        .product-card {
            height: 380px; /* Slightly smaller height for medium screens */
        }
    }

    @media (max-width: 768px) {
        .product-detail-section {
            flex-direction: column;
        }

        .image-gallery {
            max-width: 100%;
        }

        .zoom-container {
            height: 300px;
        }

        .zoom-result {
            display: none !important;
        }

        .product-main-container .breadcrumb {
            padding: 10px 15px;
        }

        .product-card {
            height: 360px; /* Adjust height for smaller screens */
        }
    }

    @media (max-width: 576px) {
        .product-grid {
            grid-template-columns: 1fr;
        }
        .product-card {
            height: 340px; /* Adjust height for mobile */
        }
    }
</style>

<div class="product-main-container">
    <!-- Breadcrumb -->
    <nav class="breadcrumb" aria-label="Breadcrumb">
        <a href="/">Home</a>
        <span>></span>
        <a href="/shop">Shop</a>
        <% if (product.category) { %>
            <span>></span>
            <a href="/shop?category=<%= product.category._id %>">
                <%= product.category.name %>
            </a>
        <% } %>
        <span>></span>
        <span class="current"><%= title %></span>
    </nav>

    <section class="product-detail-section">
        <!-- Image Gallery -->
        <div class="image-gallery">
            <div class="zoom-container" id="zoomContainer">
                <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>" class="main-image" id="mainImage">
                <div class="zoom-lens" id="zoomLens"></div>
                <div class="zoom-result" id="zoomResult">
                    <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>" id="zoomedImage">
                </div>
            </div>
            <div class="thumbnail-container">
                <% product.productImage.forEach((image, index) => { %>
                    <img src="<%= image %>" alt="<%= product.productName %> Thumbnail <%= index + 1 %>" class="thumbnail <%= index === 0 ? 'active' : '' %>" onclick="changeImage(this)">
                <% }) %>
            </div>
        </div>

        <!-- Product Information -->
        <div class="product-info">
            <h1 class="product-title"><%= title %></h1>
            <p class="brand-name"><%= product.brand.BrandName %></p>

            <div class="price-section">
                <% if (finalOffer) { %>
                    <span class="sale-price">₹<%= discountedPrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %></span>
                    <span class="strike-price">₹<%= product.salePrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %></span>
                    <span class="offer-info"><%= finalOffer.discountAmount %>% OFF</span>
                <% } else { %>
                    <span class="sale-price">₹<%= product.salePrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %></span>
                <% } %>
            </div>

            <p class="product-description"><%= product.description %></p>

            <div class="status-quantity">
               <% if (product.quantity > 0) { %>
                    <span class="status">Status: <%= product.status %></span>
                <% } %>

                <span style="color: #000000; font-weight: 300;" class="quantity">Quantity: <%= product.quantity %> in stock</span>
            </div>

            <div class="action-buttons">
                <% if(product.quantity > 0) { %>
                <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
                <% } else { %>
                <button class="add-to-cart-btn" style="background-color: #eb2e2e;" disabled>Out Of Stock</button>
                <% } %>
                <button class="add-to-wishList" onclick="addToWishlist('<%= product._id %>')">❤️ Add to Wishlist</button>
            </div>
        </div>
    </section>

    <section>
        <div class="related-products">
            <h3 class="related-title">Related Products</h3>
            <div class="product-grid">
                <% if (relatedProducts && relatedProducts.length > 0) { %>
                    <% relatedProducts.forEach(product => { %>
                        <div class="product-card">
                            <a href="javascript:void(0)" class="wishlist-btn" data-product-id="<%= product._id %>" onclick="toggleWishlist('<%= product._id %>', this)" aria-label="Toggle wishlist">
                                <i class="<%= product.isInWishlist ? 'fas' : 'far' %> fa-heart"></i>
                            </a>
                            <a style="text-decoration: none; color: black;" href="/product/<%= product._id %>">
                                <img src="<%= product.productImage[0] %>" alt="<%= product.productName || 'Product Image' %>" />
                                <h4 style="font-weight: bolder;"><%= product.productName %></h4>
                                <h6 style="font-weight: 300;"><%= product.brand ? product.brand.BrandName : 'Unknown Brand' %></h6>
                                <p>
                                    <% if (product.finalOffer) { %>
                                        <strong>
                                            ₹<%= product.discountedPrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %>
                                        </strong>
                                        <span style="font-weight: 100;" class="strike-price">
                                            ₹<%= product.salePrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %>
                                        </span>
                                        <span style="color: #ff4444; font-weight: 600;">
                                            <%= product.finalOffer.discountAmount %>% OFF
                                        </span>
                                    <% } else { %>
                                        ₹<%= product.salePrice.toLocaleString("en-IN", { minimumFractionDigits: 2 }) %>
                                    <% } %>
                                </p>
                            </a>
                            <% if(product.quantity > 0) { %>
                                <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
                            <% } else { %>
                                <button class="add-to-cart-btn" style="background-color: #3a3a3a;" disabled>Out Of Stock</button>
                            <% } %>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p style="text-align: center; color: #666;">No related products found.</p>
                <% } %>
            </div>
        </div>
    </section>
</div>

<script>
    function changeImage(element) {
        const mainImage = document.getElementById('mainImage');
        const zoomedImage = document.getElementById('zoomedImage');
        mainImage.src = element.src;
        zoomedImage.src = element.src;

        document.querySelectorAll('.thumbnail').forEach(thumb => {
            thumb.classList.remove('active');
        });
        element.classList.add('active');
    }

    document.addEventListener('DOMContentLoaded', function() {
        const image = document.getElementById('mainImage');
        const container = document.getElementById('zoomContainer');
        const ZOOM_SCALE = 2.5;

        container.addEventListener('mouseenter', function() {
            image.style.transformOrigin = '0 0';
        });

        container.addEventListener('mousemove', function(e) {
            const containerRect = container.getBoundingClientRect();
            const xPos = (e.clientX - containerRect.left) / containerRect.width;
            const yPos = (e.clientY - containerRect.top) / containerRect.height;
            image.style.transform = `scale(${ZOOM_SCALE})`;
            image.style.transformOrigin = `${xPos * 100}% ${yPos * 100}%`;
        });

        container.addEventListener('mouseleave', function() {
            image.style.transform = 'scale(1)';
        });

        // Fetch wishlist on page load
        fetchWishlist();
    });

    async function fetchWishlist() {
        try {
            const response = await fetch('/wishlist', {
                method: 'GET',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin'
            });
            const data = await response.json();
            if (response.ok && data.success && data.wishlist) {
                const wishlistItems = data.wishlist.items || [];
                document.querySelectorAll('.wishlist-btn').forEach(button => {
                    const productId = button.getAttribute('data-product-id');
                    const isWishlisted = wishlistItems.some(item => item.productId && item.productId.toString() === productId);
                    const heartIcon = button.querySelector('i');
                    heartIcon.classList.remove('far', 'fas');
                    heartIcon.classList.add(isWishlisted ? 'fas' : 'far');
                    if (isWishlisted) {
                        button.classList.add('liked');
                    } else {
                        button.classList.remove('liked');
                    }
                });
            } else {
                console.error('Failed to fetch wishlist:', data.message || 'Invalid response');
            }
        } catch (error) {
            console.error('Error fetching wishlist:', error);
        }
    }

    async function toggleWishlist(productId, buttonElement) {
        const button = buttonElement;
        const heartIcon = button.querySelector('i');
        const isWishlisted = heartIcon.classList.contains('fas');

        if (isWishlisted) {
            heartIcon.classList.remove('fas');
            heartIcon.classList.add('far');
            button.classList.remove('liked');
        } else {
            heartIcon.classList.remove('far');
            heartIcon.classList.add('fas');
            button.classList.add('liked');
        }

        try {
            const endpoint = isWishlisted ? '/wishlist/remove' : '/wishlist/add';
            const response = await fetch(endpoint, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId }),
            });
            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: isWishlisted ? 'Product removed from wishlist' : 'Product added to wishlist',
                    icon: 'success',
                    confirmButtonText: 'OK',
                    timer: 1500,
                    showConfirmButton: false
                });
            } else {
                if (isWishlisted) {
                    heartIcon.classList.add('fas');
                    heartIcon.classList.remove('far');
                    button.classList.add('liked');
                } else {
                    heartIcon.classList.add('far');
                    heartIcon.classList.remove('fas');
                    button.classList.remove('liked');
                }
                Swal.fire({
                    title: 'Error!',
                    text: data.message || 'Error updating wishlist',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            if (isWishlisted) {
                heartIcon.classList.add('fas');
                heartIcon.classList.remove('far');
                button.classList.add('liked');
            } else {
                heartIcon.classList.add('far');
                heartIcon.classList.remove('fas');
                button.classList.remove('liked');
            }
            Swal.fire({
                title: 'Error!',
                text: 'Error updating wishlist. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    }

    async function addToCart(productId) {
        try {
            const response = await fetch('/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId }),
            });
            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'Go to Cart',
                    showCancelButton: true,
                    cancelButtonText: 'Continue Shopping',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/cart';
                    }
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: 'Error adding to cart. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        }
    }

    async function addToWishlist(productId) {
        try {
            const response = await fetch('/wishlist/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId }),
            });
            const data = await response.json();
            if (response.ok) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Product added to wishlist',
                    icon: 'success',
                    confirmButtonText: 'OK',
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: 'Error adding to wishlist. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK',
            });
        }
    }
</script>

<%- include("../partials/user/footer") %>